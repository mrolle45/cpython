
# macroargs.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CPP_COMMA CPP_LPAREN CPP_RPAREN OTHER args : CPP_LPAREN args CPP_RPAREN  args :\n                | arg\n                | arg CPP_COMMA args\n         arg :\n                | primary\n                | primary arg\n         group : CPP_LPAREN groupcontents CPP_RPAREN  groupcontents :\n                | groupitem\n                | groupitem groupcontents\n         groupitem : primary  groupitem :  CPP_COMMA  primary : group  primary : OTHER '
    
_lr_action_items = {'CPP_LPAREN':([0,2,4,5,6,9,10,11,12,14,16,18,],[2,2,14,-14,-15,-13,14,14,2,14,-8,-12,]),'$end':([0,1,3,4,5,6,12,13,15,16,19,],[-2,0,-3,-5,-14,-15,-2,-7,-1,-8,-4,]),'CPP_COMMA':([0,2,3,4,5,6,9,10,11,12,13,14,16,18,],[-5,9,12,-5,-14,-15,-13,9,-5,-5,-7,9,-8,-12,]),'OTHER':([0,2,4,5,6,9,10,11,12,14,16,18,],[6,6,6,-14,-15,-13,6,6,6,6,-8,-12,]),'CPP_RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,],[-2,-3,-5,-14,-15,15,16,-13,-9,-5,-2,-7,-9,-1,-8,-11,-12,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'args':([0,2,12,],[1,7,19,]),'arg':([0,2,4,11,12,],[3,3,13,13,3,]),'primary':([0,2,4,10,11,12,14,],[4,11,4,18,4,4,18,]),'group':([0,2,4,10,11,12,14,],[5,5,5,5,5,5,5,]),'groupcontents':([2,10,14,],[8,17,8,]),'groupitem':([2,10,14,],[10,10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> args","S'",1,None,None,None),
  ('args -> CPP_LPAREN args CPP_RPAREN','args',3,'p_top','parserules.py',230),
  ('args -> <empty>','args',0,'p_args','parserules.py',235),
  ('args -> arg','args',1,'p_args','parserules.py',236),
  ('args -> arg CPP_COMMA args','args',3,'p_args','parserules.py',237),
  ('arg -> <empty>','arg',0,'p_arg','parserules.py',243),
  ('arg -> primary','arg',1,'p_arg','parserules.py',244),
  ('arg -> primary arg','arg',2,'p_arg','parserules.py',245),
  ('group -> CPP_LPAREN groupcontents CPP_RPAREN','group',3,'p_group','parserules.py',253),
  ('groupcontents -> <empty>','groupcontents',0,'p_groupcontents','parserules.py',258),
  ('groupcontents -> groupitem','groupcontents',1,'p_groupcontents','parserules.py',259),
  ('groupcontents -> groupitem groupcontents','groupcontents',2,'p_groupcontents','parserules.py',260),
  ('groupitem -> primary','groupitem',1,'p_groupitem','parserules.py',266),
  ('groupitem -> CPP_COMMA','groupitem',1,'p_groupitemcomma','parserules.py',271),
  ('primary -> group','primary',1,'p_prim','parserules.py',276),
  ('primary -> OTHER','primary',1,'p_other','parserules.py',281),
]
